# frozen_string_literal: true

module RubyModKit
  module Node
    # Transpiler program node
    class SymbolNode < Node::BaseNode
      private getter @prism_node: Prism::SymbolNode
      getter @parent: (Node::BaseNode)
      getter @prev: (Node::BaseNode | nil)
      @value: Symbol | nil

      def initialize(@prism_node, @parent:, @prev: nil): void
        raise RubyModKit::Error unless prism_node.is_a?(Prism::SymbolNode)

        super()
      end

      def value: (Symbol | nil)
        return @value if defined?(@value)

        @value = @prism_node.value&.to_sym
      end
    end
  end
end
