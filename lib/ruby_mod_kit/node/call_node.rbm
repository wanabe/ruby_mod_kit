# frozen_string_literal: true

module RubyModKit
  module Node
    # Transpiler method call node
    class CallNode < Node::BaseNode
      private getter @prism_node: Prism::CallNode
      getter @name: Symbol
      getter @parent: (Node::BaseNode)
      getter @prev: (Node::BaseNode | nil)

      def initialize(@prism_node, @parent:, @prev: nil): void
        raise RubyModKit::Error unless prism_node.is_a?(Prism::CallNode)

        @name = prism_node.name.to_sym
        super()
      end
    end
  end
end
