# frozen_string_literal: true

# rbs_inline: enabled

module RubyModKit
  class Node
    # Transpiler program node
    class ParameterNode < Node
      # @rbs!
      #   type prism_node = Prism::RequiredParameterNode | Prism::OptionalKeywordParameterNode
      #                   | Prism::OptionalParameterNode | Prism::RequiredKeywordParameterNode
      #                   | Prism::RestParameterNode

      getter @prism_node: prism_node

      def initialize(prism_node => @prism_node, Node => @parent:): void
        case prism_node
        when Prism::RequiredParameterNode, Prism::OptionalKeywordParameterNode,
             Prism::OptionalParameterNode, Prism::RequiredKeywordParameterNode,
             Prism::RestParameterNode
          super()
        else
          raise RubyModKit::Error, "unexpected prism node #{prism_node.class}"
        end
      end

      def name: (Symbol | nil)
        @prism_node.name
      end
    end
  end
end
