# frozen_string_literal: true

# rbs_inline: enabled

module RubyModKit
  class Node
    # Transpiler program node
    class ClassNode < Node
      getter @prism_node: Prism::ClassNode
      getter @body_node: (nil | Node::StatementsNode)
      getter @parent: Node

      def initialize(@prism_node, @parent:): void
        raise RubyModKit::Error unless prism_node.is_a?(Prism::ClassNode)

        super()
      end

      def wrap(Prism::Node => child_prism_node): Node
        node = super
        @body_node = node if child_prism_node == prism_node.body && node.is_a?(Node::StatementsNode)
        node
      end
    end
  end
end
