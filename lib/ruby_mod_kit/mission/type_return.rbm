# frozen_string_literal: true

# rbs_inline: enabled

module RubyModKit
  class Mission
    # The mission for parameter types
    class TypeReturn < Mission
      def initialize: void
        super(0)
      end

      def perform(Generation => generation, Node => root_node, (Prism::ParseResult) => parse_result, Memo => memo): bool
        memo.methods_memo.each do |offset, method_memo|
          def_node = root_node.def_node_at(offset)
          raise RubyModKit::Error, "DefNode not found" if !def_node || !def_node.is_a?(Node::DefNode)
          next if method_memo.untyped?

          src_offset = parse_result.source.offsets[def_node.location.start_line - 1]
          indent = offset - src_offset
          generation[src_offset, 0] = "#{" " * indent}# @rbs return: #{method_memo.type}\n"
        end
        true
      end
    end
  end
end
