# frozen_string_literal: true

# rbs_inline: enabled

module RubyModKit
  # The class of transpiler generation.
  class Generation
    getter @parse_result: Prism::ParseResult
    getter @script: String
    @missions: Array[Mission]
    @memo: Memo
    @root_node: Node::ProgramNode
    @offset_diff: OffsetDiff
    @generation_num: Integer

    def initialize(@script, @missions: [], @memo: Memo.new, @generation_num: 0): void
      @offset_diff = OffsetDiff.new
      @parse_result = Prism.parse(@script)
      @root_node = Node::ProgramNode.new(@parse_result.value)
      init_missions
    end

    def init_missions: void
      return unless first_generation?

      add_mission(Mission::FixParseError.new)
      add_mission(Mission::TypeAttr.new)
      add_mission(Mission::Overload.new)
      add_mission(Mission::TypeParameter.new)
      add_mission(Mission::TypeReturn.new)
    end

    def first_generation?: bool
      @generation_num == 0
    end

    def succ: Generation
      @missions.each do |mission|
        mission.succ(@offset_diff)
      end
      @memo.succ(@offset_diff)
      Generation.new(
        @script,
        missions: @missions,
        memo: @memo,
        generation_num: @generation_num + 1,
      )
    end

    def resolve: void
      perform_missions
    end

    def completed?: bool
      @parse_result.errors.empty? && @missions.empty?
    end

    def []=(Integer => src_offset, Integer => length, String => str): String
      diff = str.length - length
      @script[@offset_diff[src_offset], length] = str
      @offset_diff.insert(src_offset, diff)
    end

    def [](Range[Integer] => src_range): String
      dst_range = Range.new(@offset_diff[src_range.first], @offset_diff[src_range.last], src_range.exclude_end?)
      @script[dst_range] || raise(RubyModKit::Error, "Invalid range")
    end

    def perform_missions: void
      @missions.delete_if do |mission|
        mission.perform(self, @root_node, @parse_result, @memo) || break
      end
    end

    def add_mission(Mission => mission): void
      @missions << mission
    end
  end
end
