# frozen_string_literal: true

require "ruby_mod_kit"

# Define RubyMotKit.eval
module RubyModKit
  module CoreExt
    # the extension for eval
    module Eval
      module_function

      def eval(String => expr, *Object => rest, bool => transpile: true): Object
        if transpile
          fname = rest[1].is_a?(String) ? rest[1] : "(eval)"
          expr = RubyModKit.transpile(expr, filename: fname)
        end

        case rest
        in [] | [Binding] | [Binding, String] | [Binding, String, Integer]
          super(expr, *rest)
        end
      end
    end
  end

  class << self
    include(CoreExt::Eval)
    public :eval
  end
end
