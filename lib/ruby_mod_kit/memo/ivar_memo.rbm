# frozen_string_literal: true

# rbs_inline: enabled

module RubyModKit
  module Memo
    # The memo for parameter type
    class IvarMemo
      getter @type: (nil | String)
      getter @attr_kind: (nil | Symbol)
      @name: Symbol

      def initialize(@name): void
      end

      def type=(String => type): void
        @type = Memo.unify_type(type)
      end

      def attr_kind=((Symbol | String) => kind): void
        case kind.to_sym
        when :attr_reader, :reader, :getter
          @attr_kind = :attr_reader
        when :attr_writer, :writer, :setter
          @attr_kind = :attr_writer
        when :attr_accessor, :accessor, :property
          @attr_kind = :attr_accessor
        end
      end
    end
  end
end
