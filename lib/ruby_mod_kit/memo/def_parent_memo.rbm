# frozen_string_literal: true

module RubyModKit
  module Memo
    # The memo for def parent (class, module)
    class DefParentMemo < OffsetMemo
      getter @ivars_memo: Hash[Symbol, Memo::IvarMemo]

      def initialize(Node::DefParentNode => def_parent_node): void
        @ivars_memo = {}
        super(def_parent_node.offset)
      end

      def ivar_memo(Symbol => name): (Memo::IvarMemo)
        @ivars_memo[name] ||= Memo::IvarMemo.new(name)
      end

      def succ(OffsetDiff => offset_diff): void
        @ivars_memo.each_value do |ivar_memo|
          ivar_memo.succ(offset_diff)
        end
        super
      end
    end
  end
end
