# frozen_string_literal: true

module RubyModKit
  module Memo
    # The memo for parameter type
    class MethodMemo < OffsetMemo
      getter @name: Symbol
      getter @parameters: Set[Memo::ParameterMemo]
      getter @type: String

      UNTYPED = "untyped" #: String

      def initialize(Node::DefNode => node): void
        @type = UNTYPED
        @parameters = Set.new
        @name = node.name
        raise RubyModKit::Error unless node.parent

        super(node.offset)
      end

      def add_parameter(Memo::ParameterMemo => parameter_memo): (Memo::ParameterMemo)
        @parameters << parameter_memo
        parameter_memo
      end

      def untyped?: bool
        @type == UNTYPED
      end

      def type=(String => type): void
        @type = RubyModKit.unify_type(type)
      end
    end
  end
end
