# Generated from lib/ruby_mod_kit/generation.rb with RBS::Inline

module RubyModKit
  # The class of transpiler generation.
  class Generation
    @diffs: SortedSet[[ Integer, Integer, Integer ]]

    @missions: Array[Mission]

    @script: String

    attr_reader parse_result: Prism::ParseResult

    attr_reader script: String

    # @rbs script: String
    # @rbs missions: Array[Mission]
    # @rbs previous_error_count: Integer
    # @rbs generation_num: Integer
    # @rbs return: void
    def initialize: (String script, ?missions: Array[Mission], ?previous_error_count: Integer, ?generation_num: Integer) -> void

    # @rbs return: bool
    def first_generation?: () -> bool

    # @rbs return: Generation
    def generate_next: () -> Generation

    # @rbs return: void
    def resolve: () -> void

    # @rbs return: bool
    def completed?: () -> bool

    # @rbs return: void
    def resolve_parse_errors: () -> void

    # @rbs src_offset: Integer
    # @rbs length: Integer
    # @rbs str: String
    # @rbs return: String
    def []=: (Integer src_offset, Integer length, String str) -> String

    # @rbs src_range: Range[Integer]
    # @rbs return: String
    def []: (Range[Integer] src_range) -> String

    # @rbs return: void
    def perform_missions: () -> void

    # @rbs src_offset: Integer
    # @rbs return: Integer
    def dst_offset: (Integer src_offset) -> Integer

    # @rbs src_offset: Integer
    # @rbs new_diff: Integer
    # @rbs return: void
    def insert_diff: (Integer src_offset, Integer new_diff) -> void

    # @rbs mission: Mission
    # @rbs return: void
    def add_mission: (Mission mission) -> void
  end
end
