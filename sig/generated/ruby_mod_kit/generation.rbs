# Generated from lib/ruby_mod_kit/generation.rb with RBS::Inline

module RubyModKit
  # The class of transpiler generation.
  class Generation
    @parse_result: Prism::ParseResult

    @script: String

    @missions: Array[Mission::BaseMission]

    @memo_pad: MemoPad

    @root_node: Node::ProgramNode

    @offset_diff: OffsetDiff

    @generation_num: Integer

    @filename: String | nil

    @corrector_manager: CorrectorManager

    attr_reader parse_result: Prism::ParseResult

    attr_reader script: String

    # @rbs script: String
    # @rbs missions: Array[Mission::BaseMission]
    # @rbs memo_pad: MemoPad | nil
    # @rbs generation_num: Integer
    # @rbs filename: String | nil
    # @rbs corrector_manager: CorrectorManager | nil
    # @rbs return: void
    def initialize: (String script, ?missions: Array[Mission::BaseMission], ?memo_pad: MemoPad | nil, ?generation_num: Integer, ?filename: String | nil, ?corrector_manager: CorrectorManager | nil) -> void

    # @rbs return: void
    def init_missions: () -> void

    # @rbs return: bool
    def first_generation?: () -> bool

    # @rbs return: Generation
    def succ: () -> Generation

    # @rbs return: String
    def name: () -> String

    # @rbs return: bool
    def completed?: () -> bool

    # @rbs src_offset: Integer
    # @rbs length: Integer
    # @rbs str: String
    # @rbs return: String
    def []=: (Integer src_offset, Integer length, String str) -> String

    # @rbs src_range: Range[Integer]
    # @rbs return: String
    def []: (Range[Integer] src_range) -> String

    # @rbs (Integer) -> String
    #    | (Node::BaseNode) -> String
    #    | (Prism::ParseError) -> String
    def line: (Integer) -> String
            | (Node::BaseNode) -> String
            | (Prism::ParseError) -> String

    # @rbs line_num: Integer
    # @rbs return: String
    def line__overload0: (Integer line_num) -> String

    # @rbs node: Node::BaseNode
    # @rbs return: String
    def line__overload1: (Node::BaseNode node) -> String

    # @rbs parse_error: Prism::ParseError
    # @rbs return: String
    def line__overload2: (Prism::ParseError parse_error) -> String

    # @rbs (Integer) -> (Integer | nil)
    #    | (Prism::ParseError) -> (Integer | nil)
    def src_offset: (Integer) -> (Integer | nil)
                  | (Prism::ParseError) -> (Integer | nil)

    # @rbs line_num: Integer
    # @rbs return: Integer | nil
    def src_offset__overload0: (Integer line_num) -> (Integer | nil)

    # @rbs parse_error: Prism::ParseError
    # @rbs return: Integer | nil
    def src_offset__overload1: (Prism::ParseError parse_error) -> (Integer | nil)

    # @rbs return: void
    def perform_corrector: () -> void

    # @rbs return: void
    def perform_missions: () -> void

    # @rbs mission: Mission::BaseMission
    # @rbs return: void
    def add_mission: (Mission::BaseMission mission) -> void

    # @rbs src: String
    # @rbs filename: String | nil
    # @rbs return: Generation
    def self.resolve: (String src, ?filename: String | nil) -> Generation
  end
end
