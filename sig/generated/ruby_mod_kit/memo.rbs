# Generated from lib/ruby_mod_kit/memo.rb with RBS::Inline

module RubyModKit
  # The class of transpiler generation.
  class Memo
    @previous_error_count: Integer

    @generation_num: Integer

    @overload_methods: Hash[Array[Integer | Symbol], Hash[Node, [ String ]]]

    attr_reader previous_error_count: Integer

    attr_reader generation_num: Integer

    attr_reader overload_methods: Hash[Array[Integer | Symbol], Hash[Node, [ String ]]]

    # @rbs return: void
    def initialize: () -> void

    # @rbs offset_diff: OffsetDiff
    # @rbs previous_error_count: Integer
    # @rbs return: void
    def succ: (OffsetDiff offset_diff, Integer previous_error_count) -> void

    # @rbs type: Symbol
    # @rbs offset: Integer
    # @rbs return: NodeMemo | nil
    def []: (Symbol type, Integer offset) -> (NodeMemo | nil)

    # @rbs type: Symbol
    # @rbs node: Node
    # @rbs node_memo: NodeMemo
    # @rbs return: NodeMemo
    def add: (Symbol type, Node node, NodeMemo node_memo) -> NodeMemo
  end
end
