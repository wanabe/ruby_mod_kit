# Generated from lib/ruby_mod_kit/corrector/all_corrector.rb with RBS::Inline

module RubyModKit
  module Corrector
    # the class to correct all. TODO: split class by feature
    class AllCorrector
      # @rbs return: Array[Symbol]
      def correctable_error_types: () -> Array[Symbol]

      # @rbs parse_error: Prism::ParseError
      # @rbs generation: Generation
      # @rbs root_node: Node::ProgramNode
      # @rbs memo_pad: MemoPad
      # @rbs return: void
      def correct: (Prism::ParseError parse_error, Generation generation, Node::ProgramNode root_node, MemoPad memo_pad) -> void

      # @rbs parse_error: Prism::ParseError
      # @rbs generation: Generation
      # @rbs root_node: Node::ProgramNode
      # @rbs memo_pad: MemoPad
      # @rbs return: void
      def fix_argument_formal_ivar: (Prism::ParseError parse_error, Generation generation, Node::ProgramNode root_node, MemoPad memo_pad) -> void

      # @rbs parse_error: Prism::ParseError
      # @rbs generation: Generation
      # @rbs root_node: Node::ProgramNode
      # @rbs memo_pad: MemoPad
      # @rbs return: void
      def fix_unexpected_colon: (Prism::ParseError parse_error, Generation generation, Node::ProgramNode root_node, MemoPad memo_pad) -> void

      # @rbs parse_error: Prism::ParseError
      # @rbs generation: Generation
      # @rbs root_node: Node::ProgramNode
      # @rbs def_node: Node::DefNode
      # @rbs memo_pad: MemoPad
      # @rbs return: void
      def fix_unexpected_colon_in_def: (Prism::ParseError parse_error, Generation generation, Node::ProgramNode root_node, Node::DefNode def_node, MemoPad memo_pad) -> void

      # @rbs parse_error: Prism::ParseError
      # @rbs generation: Generation
      # @rbs def_parent_node: Node::DefParentNode
      # @rbs memo_pad: MemoPad
      # @rbs return: void
      def fix_unexpected_colon_in_module: (Prism::ParseError parse_error, Generation generation, Node::DefParentNode def_parent_node, MemoPad memo_pad) -> void
    end
  end
end
